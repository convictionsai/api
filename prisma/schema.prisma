// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:mysql@127.0.0.1:3306/convictionsai"
  // url      = env("DATABASE_URL")
}

enum Language {
  EN
}

enum QAResultStatus {
    ACTIVE
    EXPIRED
    BLOCKED
    FAILED
}

enum QAHitType {
    CACHE
    LIVE
}

model Bible {
  id          String    @id @default(uuid())
  name        String
  description String
  language    Language
  Book        Book[]
  Chapter     Chapter[]
  Verse       Verse[]
}

model Book {
  id                String    @id @default(uuid())
  bible             Bible     @relation(fields: [bibleId], references: [id])
  bibleId           String
  name              String
  description       String
  Chapter           Chapter[]
  Verse             Verse[]
  QAResultToBook    QAResultToBook[]
}

model Chapter {
  id          String  @id @default(uuid())
  bible       Bible   @relation(fields: [bibleId], references: [id])
  bibleId     String
  book        Book    @relation(fields: [bookId], references: [id])
  bookId      String
  number      Int
  name        String?
  description String?
}

model Verse {
  id          String  @id @default(uuid())
  bible       Bible   @relation(fields: [bibleId], references: [id])
  bibleId     String
  book        Book    @relation(fields: [bookId], references: [id])
  bookId      String
  number      Int
  name        String?
  description String?
  content     String  @db.Text
}

model QAResult {
  id                String  @id @default(uuid())
  hash              String
  prompt            String  @db.Text
  answer            String  @db.Text
  tokens            Int
  time              Int
  status            QAResultStatus
  hit               QAHitType
  QAResultToBook    QAResultToBook[]
}

model QAResultToBook {
  id          String  @id @default(uuid())
  qAResultId  String
  QAResult    QAResult  @relation(fields: [qAResultId], references: [id])
  bookId      String
  Book        Book      @relation(fields: [bookId], references: [id])
}
