name: "Build-Push / Deploy (merge) APP to Kubernetes"

on:
  workflow_dispatch:
  repository_dispatch:
    inputs:
      environment:
        type: "environment"
        default: "development"
  push:
    tags:
      - "*"
  pull_request:
    tags:
      - "*"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    environment:
      name: "${{ github.event.inputs.environment }}"
      url: "https://${{ github.event.inputs.environment }}.convictions.ai"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - run: |
            if [ "${{ github.event.inputs.environment  }}" = "" ]; then CONFIGURATION="development" || CONFIGURATION="${{ github.event.inputs.environment }}"; fi
            echo CONFIGURATION="$CONFIGURATION" >> $GITHUB_ENV
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            CONFIGURATION=${{ env.CONFIGURATION }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: deploy
        uses: mateothegreat/action-terraformer@main
        with:
          init: |
            backend-config:
              access_key: ${{ secrets.BACKEND_CIVO_ACCESS_KEY }}
              secret_key: ${{ secrets.BACKEND_CIVO_SECRET_KEY }}
          apply: |
            name: api
            tag: ${{github.ref_name}}
            host: ${{ secrets.KUBERNETES_SERVER }}
            token: ${{ secrets.KUBERNETES_TOKEN }}
            openai_api_key: ${{ secrets.OPENAI_API_KEY }}

#       - uses: sarisia/actions-status-discord@v1
#         if: always()
#         with:
#           webhook: ${{ secrets.DISCORD_WEBHOOK }}
