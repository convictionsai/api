# name: "Build-Push / Deploy (merge) APP to Kubernetes"
#
# on:
#   workflow_dispatch:
#   repository_dispatch:
#     inputs:
#       environment:
#         type: "environment"
#         default: "development"
#   push:
#     tags:
#       - "*"
#   pull_request:
#     tags:
#       - "*"
#
# concurrency:
#   group: ${{ github.workflow }}
#   cancel-in-progress: true
#
# jobs:
# #   build:
# #     runs-on: ubuntu-latest
# #     permissions:
# #       contents: read
# #       packages: write
# #     environment:
# #       name: "${{ github.event.inputs.environment }}"
# #       url: "https://${{ github.event.inputs.environment }}.convictions.ai"
# #
# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v3
# #
# #       - run: |
# #             if [ "${{ github.event.inputs.environment  }}" = "" ]; then CONFIGURATION="development" || CONFIGURATION="${{ github.event.inputs.environment }}"; fi
# #             echo CONFIGURATION="$CONFIGURATION" >> $GITHUB_ENV
# #       - name: Log in to the Container registry
# #         uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
# #         with:
# #           registry: ghcr.io
# #           username: ${{ github.actor }}
# #           password: ${{ secrets.GITHUB_TOKEN }}
# #
# #       - name: Extract metadata (tags, labels) for Docker
# #         id: meta
# #         uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
# #         with:
# #           images: |
# #             ghcr.io/${{ github.repository }}
# #
# #       - name: Build and push Docker images
# #         uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
# #         with:
# #           context: .
# #           push: true
# #           tags: ${{ steps.meta.outputs.tags }}
# #           labels: ${{ steps.meta.outputs.labels }}
# #           no-cache: true
# #           build-args: |
# #             GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
# #             CONFIGURATION=${{ env.CONFIGURATION }}
#
#   deploy:
#     runs-on: ubuntu-latest
# #     needs: build
#     steps:
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#
#       - name: Checkout code
#         uses: actions/checkout@v3
#
#       - name: Terraform init
#         id: init
#         run: terraform init -backend-config="access_key=${{ secrets.BACKEND_CIVO_ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.BACKEND_CIVO_SECRET_KEY }}"
#
#       - name: Terraform format
#         id: fmt
#         run: terraform fmt
#
#       - name: Terraform validate
#         id: validate
#         run: terraform validate -no-color
#
#       - name: Terraform plan
#         id: plan
#         run: |
#           terraform plan
#       - name: Terraform apply
#         run: |
#           terraform apply -var "name=api" \
#                           -var "host=${{ secrets.KUBERNETES_SERVER }}" \
#                           -var "token=${{ secrets.KUBERNETES_TOKEN }}" \
#                           -var "openai_api_key=${{ secrets.OPENAI_API_KEY }}" \
#                           --auto-approve
#
# #       - uses: sarisia/actions-status-discord@v1
# #         if: always()
# #         with:
# #           webhook: ${{ secrets.DISCORD_WEBHOOK }}
name: deploy
on:
  push:
    branches:
      - "*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: deploy
        uses: mateothegreat/action-terraformer@0.0.1
        with:
          init:
            access_key: ${{ secrets.BACKEND_CIVO_ACCESS_KEY }}
            secret_key: ${{ secrets.BACKEND_CIVO_SECRET_KEY }}
          apply:
            env:
              name: api
              tag:
              host: ${{ secrets.KUBERNETES_SERVER }}
              token: ${{ secrets.KUBERNETES_TOKEN }}
              openai_api_key: ${{ secrets.OPENAI_API_KEY }}

